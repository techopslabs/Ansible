---
# zabbix_install.yml
# Ansible Playbook for Zabbix 7.2 Installation on Ubuntu 22.04

- name: Install Zabbix Server on Ubuntu 22.04
  hosts: webservers
  become: yes
  vars:
    zabbix_version: "7.2"
    zabbix_repo_url: "https://repo.zabbix.com/zabbix/7.2/release/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest_7.2+ubuntu22.04_all.deb"
    db_password: "Secure@password@321"
    timezone: "UTC"

  tasks:
    # Initial system preparation
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install required dependencies
      apt:
        name:
          - wget
          - gnupg
          - software-properties-common
          - apt-transport-https
        state: present

    # Zabbix repository setup
    - name: Download Zabbix repository package
      get_url:
        url: "{{ zabbix_repo_url }}"
        dest: "/tmp/zabbix-release.deb"
      register: download_repo

    - name: Install Zabbix repository
      apt:
        deb: "/tmp/zabbix-release.deb"
      when: download_repo.changed

    - name: Update apt cache after adding repository
      apt:
        update_cache: yes
      when: download_repo.changed
      
    # Check available packages
    - name: Check available Zabbix packages
      shell: apt-cache search zabbix
      register: zabbix_packages
      changed_when: false

    - name: Display available Zabbix packages
      debug:
        var: zabbix_packages.stdout_lines
        
    - name: Check for specific Zabbix packages
      shell: "apt-cache search --names-only {{ item }}"
      loop:
        - zabbix-server-mysql
        - zabbix-frontend-php
        - zabbix-apache-conf
        - zabbix-apache2-conf
        - zabbix-sql-scripts
        - zabbix-agent
      register: package_check
      changed_when: false
      
    - name: Display package check results
      debug:
        var: package_check.results

    # Install Zabbix components - core components first
    - name: Install Zabbix server, frontend, and agent
      apt:
        name:
          - zabbix-server-mysql
          - zabbix-frontend-php
          - zabbix-agent
        state: present
        
    # Try to install Apache conf package (might have different name in 7.2)
    - name: Check if zabbix-apache-conf exists
      shell: apt-cache search --names-only zabbix-apache-conf
      register: apache_conf_check
      changed_when: false
      
    - name: Install zabbix-apache-conf if available
      apt:
        name: zabbix-apache-conf
        state: present
      when: apache_conf_check.stdout != ""
      
    - name: Try installing zabbix-apache2-conf if zabbix-apache-conf not available
      apt:
        name: zabbix-apache2-conf
        state: present
      when: apache_conf_check.stdout == ""
      ignore_errors: yes
      
    # Try to install SQL scripts package (might be included in server in 7.2)
    - name: Check if zabbix-sql-scripts exists
      shell: apt-cache search --names-only zabbix-sql-scripts
      register: sql_scripts_check
      changed_when: false
      
    - name: Install zabbix-sql-scripts if available
      apt:
        name: zabbix-sql-scripts
        state: present
      when: sql_scripts_check.stdout != ""

    # MySQL database setup
    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Ensure MySQL is running
      service:
        name: mysql
        state: started
        enabled: yes

    - name: Create Zabbix database
      mysql_db:
        name: zabbix
        encoding: utf8mb4
        collation: utf8mb4_bin
        state: present

    - name: Create Zabbix database user
      mysql_user:
        name: zabbix
        host: localhost
        password: "{{ db_password }}"
        priv: 'zabbix.*:ALL'
        state: present

    - name: Enable log_bin_trust_function_creators for SQL import
      mysql_variables:
        variable: log_bin_trust_function_creators
        value: 1
        mode: global
        
    # Find SQL schema location (might be in different place in 7.2)
    - name: Find SQL schema location
      find:
        paths: /usr/share
        patterns: "create.sql.gz"
        recurse: yes
      register: sql_schema
      
    - name: Display SQL schema location
      debug:
        var: sql_schema.files
        
    - name: Set SQL schema path
      set_fact:
        sql_schema_path: "{{ sql_schema.files[0].path }}"
      when: sql_schema.files | length > 0
      
    - name: Import Zabbix SQL schema
      shell: zcat {{ sql_schema_path }} | mysql -uzabbix -p{{ db_password }} zabbix
      args:
        executable: /bin/bash
      register: import_result
      changed_when: import_result.rc == 0
      when: sql_schema.files | length > 0
      # Adding a timeout as this can take a while for large schemas
      async: 600
      poll: 15

    - name: Disable log_bin_trust_function_creators after import
      mysql_variables:
        variable: log_bin_trust_function_creators
        value: 0
        mode: global

    # Find and configure Zabbix server configuration
    - name: Find Zabbix server configuration
      find:
        paths: /etc
        patterns: "zabbix_server.conf"
        recurse: yes
      register: server_conf
      
    - name: Display server configuration path
      debug:
        var: server_conf.files
        
    - name: Set server configuration path
      set_fact:
        server_conf_path: "{{ server_conf.files[0].path }}"
      when: server_conf.files | length > 0
      
    # Configure Zabbix server
    - name: Configure Zabbix server database connection
      lineinfile:
        path: "{{ server_conf_path }}"
        regexp: '^# DBPassword='
        line: "DBPassword={{ db_password }}"
      when: server_conf.files | length > 0

    # Find PHP configuration
    - name: Find PHP configuration for Apache
      find:
        paths: /etc/php
        patterns: "php.ini"
        recurse: yes
      register: php_ini
      
    - name: Display PHP configuration paths
      debug:
        var: php_ini.files
        
    - name: Filter for Apache PHP configuration
      set_fact:
        apache_php_ini: "{{ php_ini.files | selectattr('path', 'search', 'apache') | list }}"
        
    - name: Set PHP configuration path
      set_fact:
        php_conf_path: "{{ apache_php_ini[0].path }}"
      when: apache_php_ini | length > 0
      
    # Configure PHP
    - name: Configure PHP timezone
      replace:
        path: "{{ php_conf_path }}"
        regexp: ';date.timezone ='
        replace: "date.timezone = {{ timezone }}"
      when: apache_php_ini | length > 0

    - name: Configure PHP memory limit
      replace:
        path: "{{ php_conf_path }}"
        regexp: 'memory_limit = 128M'
        replace: 'memory_limit = 256M'
      when: apache_php_ini | length > 0
      ignore_errors: yes

    # Start and enable services
    - name: Start and enable Zabbix server
      systemd:
        name: zabbix-server
        state: restarted
        enabled: yes

    - name: Start and enable Zabbix agent
      systemd:
        name: zabbix-agent
        state: restarted
        enabled: yes

    - name: Start and enable Apache
      systemd:
        name: apache2
        state: restarted
        enabled: yes

    # Cleanup
    - name: Cleanup temporary files
      file:
        path: "/tmp/zabbix-release.deb"
        state: absent

    # Installation summary
    - name: Display installation complete message
      debug:
        msg: 
          - "Zabbix installation completed!"
          - "Access the Zabbix web interface at http://{{ ansible_default_ipv4.address }}/zabbix"
          - "Default credentials: Admin / zabbix"
          - "Be sure to change the default password after first login!"
